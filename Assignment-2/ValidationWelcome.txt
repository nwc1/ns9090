app.component.html

<div class="login-container">
  <form [formGroup]="loginForm" (ngSubmit)="onSubmit()">
    <div>
      <label for="username">Username:</label>
      <input type="text" id="username" formControlName="username">
      <div *ngIf="f['username'].invalid && (f['username'].dirty || f['username'].touched)" class="error">
        <div *ngIf="f['username'].errors?.['required']">Username is required.</div>
        <div *ngIf="f['username'].errors?.['minlength']">Username must be at least 3 characters long.</div>
      </div>
    </div>
    <div>
      <label for="password">Password:</label>
      <input type="password" id="password" formControlName="password">
      <div *ngIf="f['password'].invalid && (f['password'].dirty || f['password'].touched)" class="error">
        <div *ngIf="f['password'].errors?.['required']">Password is required.</div>
        <div *ngIf="f['password'].errors?.['minlength']">Password must be at least 6 characters long.</div>
      </div>
    </div>
    <button type="submit" [disabled]="loginForm.invalid">Login</button>
  </form>

  <div *ngIf="loginSuccessful" class="welcome-message">
    Welcome!
  </div>
</div>


<router-outlet />





app.component.ts



import { Component } from '@angular/core';
import { RouterOutlet } from '@angular/router';
import { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';
import { CommonModule } from '@angular/common';
@Component({
  selector: 'app-root',
  standalone: true,
  imports: [RouterOutlet,ReactiveFormsModule,CommonModule],
  templateUrl: './app.component.html',
  styleUrl: './app.component.css'
})
export class AppComponent {
  loginForm: FormGroup;
  loginSuccessful: boolean = false;

  constructor(private fb: FormBuilder) {
    this.loginForm = this.fb.group({
      username: ['', [Validators.required, Validators.minLength(3)]],
      password: ['', [Validators.required, Validators.minLength(6)]],
    });
  }

  get f() {
    return this.loginForm.controls;
  }

  onSubmit() {
    if (this.loginForm.valid) {
      this.loginSuccessful = true;  // Simulate a successful login
    }
  }
}

app.component.css


